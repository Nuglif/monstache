# Name of the GitHub Actions Workflow
name: Monstache release docker images

# Trigger Conditions for the Workflow
on:
  # Trigger when a new release is created
  release:
    types: [created]
  # Allow manual triggering of the workflow from GitHub Actions tab
  workflow_dispatch:

# Define the Jobs to be Run
jobs:
  # Job for Docker-related tasks
  docker:
    # Run this job on an Ubuntu-latest runner
    runs-on: ubuntu-latest

    # Steps that the job will execute
    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout
        uses: actions/checkout@v3

      # Step 1.5: Debug GitHub Tag
      - name: Debug GitHub Tag
        run: |
          echo "Image Container Tag: ${{ (github.event_name == 'release' && format('type=raw,value={0}', github.event.release.tag_name)) || (github.event_name == 'workflow_dispatch' && format('type=raw,value={0}', github.ref)) || 'latest' }}"

      # Step 2: Generate Docker metadata (tags and labels)
      - name: Docker meta
        id: meta  # Assign an ID for referencing outputs in later steps
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175
        with:
          # Define the base name for Docker images
          images: |
            ghcr.io/${{ github.repository_owner }}/monstache
          # Define the tagging strategy for Docker images
          tags: |
            type=raw,value=  ${{ (github.event_name == 'release' && format('type=raw,value={0}', github.event.release.tag_name)) || (github.event_name == 'workflow_dispatch' && format('type=raw,value={0}', github.ref)) || 'latest' }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      # Step 3: Set up QEMU for hardware emulation
      - name: Set up QEMU
        uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7

      # Step 4: Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55
        with:
          version: v0.11.2
          driver-opts: image=moby/buildkit:v0.12.2

      # Step 5: Login to GitHub Container Registry (Optional)
      - name: Login to GitHub Packages
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Step 6: Build and Push Docker Images
      - name: Build and push
        uses: docker/build-push-action@0a97817b6ade9f46837855d676c4cca3a2471fc9
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}